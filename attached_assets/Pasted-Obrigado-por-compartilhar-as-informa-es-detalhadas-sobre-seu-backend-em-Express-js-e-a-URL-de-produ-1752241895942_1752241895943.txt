Obrigado por compartilhar as informações detalhadas sobre seu backend em Express.js e a URL de produção. Vou investigar por que suas rotas da API (como /api/auth/login) estão retornando "Not Found" mesmo com o deploy aparentemente bem-sucedido no Replit.

Vou verificar:

Se a aplicação está corretamente ouvindo em todas as interfaces (0.0.0.0)

Se a porta está aberta externamente no Replit

Se há algum erro de roteamento ou incompatibilidade na URL pública versus o que o Express está servindo

Se há configurações específicas do Replit que precisam ser ajustadas

Assim que eu tiver o diagnóstico completo, te aviso com os próximos passos.

Research completed in 3m· 15 fontes· 52 buscas
Rotas da API retornando Not Found após deploy no Replit

Verifique o domínio e a configuração do servidor
Em plataformas como o Replit, a URL pública da sua aplicação segue o padrão https://[nome-do-repl].[usuário].replit.app (anteriormente .repl.co)
dev.to
. No seu caso, observe que a interface indica o domínio https://painel-admin-backend-leonardosilvas2.replit.app. Se você estiver testando com workspace-leonardosilvas2.replit.app e esse não for o nome real do repl, as rotas não existirão e retornarão “Not Found”. Use sempre o nome exato do seu projeto na URL (por exemplo, painel-admin-backend-leonardosilvas2), conforme explicado em fontes de Replit
dev.to
. Também verifique se o servidor Express está ligado à porta correta e ao endereço certo. No Replit, é comum usar process.env.PORT (fornecido pelo ambiente) em vez de uma porta fixa. Por exemplo:
js
Copiar
Editar
const port = process.env.PORT || 5000;
app.listen(port, '0.0.0.0', () => console.log(`Servidor rodando na porta ${port}`));
Isso garante que o Replit vincule o tráfego externo à porta interna correta. Se o Express ficar preso no localhost (127.0.0.1) ou em uma porta diferente, as requisições externas nunca chegarão. Ouvir em 0.0.0.0 permite que o servidor aceite conexões de fora
docs.replit.com
. De fato, um tutorial do Replit recomenda usar exatamente essa estrutura (process.env.PORT || 5000) ao dar deploy
blog.logrocket.com
. Você pode confirmar no shell (por exemplo, com netstat) se a aplicação está escutando na porta esperada.
Confira o registro das rotas no Express
Outro motivo comum de “Not Found” é que as rotas não foram montadas corretamente no app.js. Se você definiu arquivos de rota separados (por exemplo, um roteador para /api/auth e outro para /api/health), certifique-se de exportá-los e de usar app.use() com o prefixo correto. Por exemplo, no guia oficial do Express, para montar um roteador birds.js faria:
js
Copiar
Editar
const birds = require('./birds');
app.use('/birds', birds);
Isso habilita rotas em /birds e /birds/about
expressjs.com
. No seu caso, se tiver um roteador de autenticação (digamos authRouter), deve fazer algo como:
js
Copiar
Editar
const authRouter = require('./routes/auth');
app.use('/api/auth', authRouter);
Assim, as rotas definidas em authRouter (por exemplo, router.post('/login', ...)) estarão acessíveis em /api/auth/login. Se você esqueceu de app.use ou colocou o caminho errado, todas as requisições para esse endpoint resultarão em 404. Confira também se não há nenhuma rota “catch-all” (como app.use(express.static(...))) que possa estar capturando as requisições antes.
Resumo das etapas de diagnóstico
URL correta: Use o domínio do Replit associado ao seu projeto (ex.: painel-admin-backend-leonardosilvas2.replit.app), seguindo o padrão [nome-repl].[usuário].replit.app
dev.to
.
Porta e host: No seu app.listen, use process.env.PORT (não fixe em 5000) e ouça em 0.0.0.0 para aceitar conexões externas
blog.logrocket.com
docs.replit.com
.
Montagem de rotas: Certifique-se de importar os módulos de rota e montá-los com app.use(prefix, router) usando o mesmo prefixo que você usa nas requisições (por exemplo, /api/auth)
expressjs.com
.
Verificação de logs: Confira os logs ou use netstat -tlnp para garantir que o servidor está ativo e escutando na porta esperada. Refaça os testes com curl ou navegador usando a URL correta.
Seguindo essas verificações (domínio, porta e registro de rotas), você deverá encontrar por que as rotas não estão sendo localizadas. Normalmente o problema é justamente a URL errada ou uma configuração incorreta do listen do servidor e do app.use das rotas. Fontes: Documentação do Replit sobre URLs de apps
dev.to
; exemplos de configuração de servidor Express no Replit
blog.logrocket.com
; guia de rotas do ExpressJS
expressjs.com
.